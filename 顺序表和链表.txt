本节重点：
1.线性表  2.顺序表  3.链表  4.顺序表和链表的区别和联系

一.线性表（linear list）是n个具有相同特性的数据元素的有限序列。线性表是一种在实际中广泛使用的数据结构，常见的线性表：顺序表、链表、栈、队列、字符串。

线性表在逻辑上是线性结构，也就说是连续的一条直线。但是在物理结构上并不一定是连续的，线性表在物理上存储时，通常以数组和链式结构的形式存储。

数据结构实际两种结构：
1、物理结构（内存中如何存）
2、逻辑结构（是我们想象出来的）

上面说了：线性表在物理上存储时，通常以数组和链式结构的形式存储。
但数组有很大的缺陷，不能随用随取，但链表可以按需申请内存。

二.顺序表(概念及结构)
顺序表是用一段物理地址连续的存储单元一次存储数据元素的线性结构，一般情况下采用数组存储。在数组上完成数据的增删改查。

顺序表一般可以分为：
1.静态顺序表：使用定长数组存储。 2.动态顺序表：使用动态开辟的数组存储。


三.链表
链表其实就是针对顺序表的缺店来进行设计的，补足的就是顺序表的缺点。
链表是一种物理存储单元上非连续、非顺序的存储结构，数据元素的逻辑顺序是通过链表中的指针链接次序实现的。链表由一系列结点（链表中每一个元素称为结点）组成，结点可以在运行时动态生成。
每个结点包括两个部分：一个是存储数据元素的数据域，另一个是存储下一个结点地址的指针域。 相比于线性表顺序结构，操作复杂。由于不必须按顺序存储，链表在插入的时候可以达到O(1)的复杂度，比另一种线性表顺序表快得多，但是查找一个节点或者访问特定编号的节点则需要O(n)的时间，而线性表和顺序表相应的时间复杂度分别是O(logn)和O(1)。

概念：链表就是一种物理存储结构上非连续、非顺序的存储结构，数据元素的逻辑顺序是通过链表中的指针链接次序实现的。

链表不存在空间浪费，不用考虑扩容的代价，按需申请空间。
头部或者尾部插入数据，也不需要挪动数据。
但链表并不支持随机访问，也就是说链表不能简单的说可以取代顺序表。

实际中链表的结构非常多样，以下情况组合起来就有8种链表结构：
1.单向、双向
2.带头、不带头
3.循环、非循环
